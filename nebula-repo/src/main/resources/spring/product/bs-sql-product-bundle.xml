<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<bean id="Bundle.findBundlesByMainItemId" class="loxia.dao.support.DynamicQueryHolder">
		<description>根据主卖品商品ID查找捆绑类商品</description>
		<constructor-arg>
			<value>
				<![CDATA[  
					select 
					     b.id,
					     b.item_id as itemId,
					     b.price_type as priceType,
					     b.available_qty as availableQty,
					     b.sync_with_inv as syncWithInv,
					     b.bundle_type as bundleType,
					     b.modify_time as modifyTime,
					     b.version as version,
					     b.create_time as createTime,
					     i.code,
					     i.lifecycle
					from t_pd_bundle b 
					inner join t_pd_item i on i.id = b.item_id
						#if($lifecycle)
			       			and i.lifecycle = :lifecycle
			       		#end
						left join (select distinct bundle_id, bundle_element_id from t_pd_bundle_sku where item_id = :itemId) t on b.id = t.bundle_id
						inner join t_pd_bundle_element e on t.bundle_element_id = e.id and e.is_main_element = true
						order by b.modify_time desc
                 ]]>
			</value>
		</constructor-arg>
	</bean>

	<bean id="Bundle.findBundlesByMainStyle" class="loxia.dao.support.DynamicQueryHolder">
		<description>根据款号查找捆绑类商品</description>
		<constructor-arg>
			<value>
				<![CDATA[  
		       		select 
		       		 	 b.id,
					     b.item_id as itemId,
					     b.price_type as priceType,
					     b.available_qty as availableQty,
					     b.sync_with_inv as syncWithInv,
					     b.bundle_type as bundleType,
					     b.modify_time as modifyTime,
					     b.version as version,
					     b.create_time as createTime,
					     i.code,
					     i.lifecycle
						from t_pd_bundle b 
						inner join t_pd_item i on i.id = b.item_id
							#if($lifecycle)
			       				and i.lifecycle = :lifecycle
			       			#end
						left join (select distinct bundle_id, bundle_element_id from t_pd_bundle_sku where style = :style) t on b.id = t.bundle_id
						inner join t_pd_bundle_element e on t.bundle_element_id = e.id and e.is_main_element = true
						order by b.modify_time desc
                 ]]>
			</value>
		</constructor-arg>
	</bean>

	<bean id="Bundle.findBundleById" class="loxia.dao.support.DynamicQueryHolder">
		<description>根据bundId查询</description>
		<constructor-arg>
			<value>
				<![CDATA[  
		       		select 
		       			 b.id,
					     b.item_id as itemId,
					     b.price_type as priceType,
					     b.available_qty as availableQty,
					     b.sync_with_inv as syncWithInv,
					     b.bundle_type as bundleType,
					     b.modify_time as modifyTime,
					     b.version as version,
					     b.create_time as createTime,
					     i.code,
					     i.lifecycle
		       		from 
		       			t_pd_bundle b 
		       		left join
		       		    t_pd_item i
		       		on
		       			i.id = b.item_id
		       		where 
		       		    b.id = :id
		       		#if($lifecycle)
			       		and i.lifecycle = :lifecycle
			       	#end
		       			
                 ]]>
			</value>
		</constructor-arg>
	</bean>

	<bean id="Bundle.findBundlesByPage" class="loxia.dao.support.DynamicQueryHolder">
		<description>分页查询</description>
		<constructor-arg>
			<value>
				<![CDATA[  
		       		select 
		       			 b.id,
					     b.item_id as itemId,
					     b.price_type as priceType,
					     b.available_qty as availableQty,
					     b.sync_with_inv as syncWithInv,
					     b.bundle_type as bundleType,
					     b.modify_time as modifyTime,
					     b.version as version,
					     b.create_time as createTime,
					     i.code,
					     i.lifecycle
		       		from 
		       			t_pd_bundle  b
		       		inner join 
		       			t_pd_item i on b.item_id = i.id
		       		where 
		       		    1 = 1
                 ]]>
			</value>
		</constructor-arg>
	</bean>

	<bean id="Bundle.findBundleItemIdByMainItemId" class="loxia.dao.support.DynamicQueryHolder">
		<description>通过主卖品的商品id查询bundle的商品id</description>
		<constructor-arg>
			<value>
				<![CDATA[  
		       		select 
		       			distinct b.item_id
					from 
						t_pd_bundle b
					inner join 
						t_pd_bundle_element be on b.id = be.bundle_id and be.is_main_element = 't'
          			inner join
						t_pd_bundle_sku bs on be.id = bs.bundle_element_id
					where 
						bs.item_id = :mainItemId
                 ]]>
			</value>
		</constructor-arg>
	</bean>
	
	<bean id="Bundle.findBundleItemIdByMainStyle" class="loxia.dao.support.DynamicQueryHolder">
		<description>通过主卖品的商品id查询bundle的商品id</description>
		<constructor-arg>
			<value>
				<![CDATA[  
		       		select 
		       			distinct b.item_id
					from 
						t_pd_bundle b
					inner join 
						t_pd_bundle_sku bs on b.id = bs.bundle_id
					inner join 
						t_pd_bundle_element be on be.id = bs.bundle_element_id and be.is_main_element = 't'
					where 
						bs.style = :mainStyle
                 ]]>
			</value>
		</constructor-arg>
	</bean>

	<bean id="Bundle.findBundleByBundleItemId" class="loxia.dao.support.DynamicQueryHolder">
		<description>通过bundle的itemid查出对应的bundle</description>
		<constructor-arg>
			<value>
				<![CDATA[  
		       		SELECT 
		       		 	b.id,
					    b.item_id as itemId,
					    b.price_type as priceType,
					    b.available_qty as availableQty,
					    b.sync_with_inv as syncWithInv,
					    b.bundle_type as bundleType,
					    b.modify_time as modifyTime,
					    b.version as version,
					    b.create_time as createTime,
					    i.code,
					    i.lifecycle
		       		FROM 
		       			t_pd_bundle b
		       		INNER JOIN 
		       			t_pd_item i on i.id = b.item_id 
		       		WHERE 
		       			b.item_id = :bundleItemId
		       			#if($lifecycle)
			       			and i.lifecycle = :lifecycle
			       		#end
                 ]]>
			</value>
		</constructor-arg>
	</bean>
	
	<bean id="Bundle.deductingBundleInventory" class="loxia.dao.support.DynamicQueryHolder">
		<description>扣减bundle库存</description>
		<constructor-arg>
			<value>
				<![CDATA[
					UPDATE 
						t_pd_bundle 
					SET
						available_qty = available_qty - :inventory
					WHERE 
						available_qty > :inventory 
						and available_qty is not null 
						and item_id = :bundleItemId
				]]>
			</value>
		</constructor-arg>
	</bean>
	
	<bean id="Bundle.unDeductingBundleInventory" class="loxia.dao.support.DynamicQueryHolder">
		<description>归还bundle库存</description>
		<constructor-arg>
			<value>
				<![CDATA[
					UPDATE 
						t_pd_bundle 
					SET
						available_qty = available_qty + :inventory
					WHERE 
						available_qty is not null 
						and item_id = :bundleItemId
				]]>
			</value>
		</constructor-arg>
	</bean>
</beans>