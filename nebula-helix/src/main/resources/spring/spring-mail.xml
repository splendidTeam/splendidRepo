<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:loxia="http://loxia.benjamin.cn/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		">

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="30" />
	</bean>

	<!-- 邮件发送器 -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="#{meta['mail.host']}" />
		<property name="port"
			value="#{meta['mail.port'] != null ? meta['mail.port'] : -1}" />
		<property name="username" value="#{meta['mail.username']}" />
		<property name="password" value="#{meta['mail.password']}" />
		<property name="defaultEncoding" value="#{meta['mail.defaultEncoding']}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth"><![CDATA[#{meta['mail.smtp.auth']}]]></prop>
				<prop key="mail.smtp.timeout"><![CDATA[#{meta['mail.smtp.timeout']}]]></prop>
				<prop
					key="#{meta['mail.usessl'] == 'true' ? 'mail.smtp.socketFactory.class' : 'nebula.nonsense'}">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>

	<util:properties id="sendEmailRule"
		location="classpath:config/sendEmailRule.properties"></util:properties>

	<bean id="defaultsendEmailConfig" class="com.baozun.nebula.manager.member.entity.SendEmailConfig">
		<!--通过value注解获取properties的value 获取是否开启时间间隔的验证开关 -->
		<property name="isValidIntervalTime">
			#{sendEmailRule['sendEmail.isValidate.intervalTime]}
		</property>
		<!-- 通过value注解获取properties的value 获取是否开启最大发送数的验证开关 -->
		<property name="isValidMaxSendNumber">
			#{sendEmailRule['sendEmail.isValidate.maxSendNumber']}
		</property>
		<!-- 通过value注解获取properties的value 获取有效期内的允许最大发送数 -->
		<property name="maxSendNumber">
			#{sendEmailRule['sendEmail.maxSendNumber]}
		</property>
		<!-- 通过value注解获取properties的value 获取有效期内的发送时间间隔 -->
		<property name="intervalTime">
			#{sendEmailRule['sendEmail.intervalTime']}
		</property>
		<!-- 通过value注解获取properties的value 获取缓存有效期 -->
		<property name="emailCacheExpireTime">
			#{sendEmailRule['sendEmail.expireTime']}
		</property>
	</bean>
 

</beans>